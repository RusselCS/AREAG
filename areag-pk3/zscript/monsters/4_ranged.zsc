class ObArcherSpawner : EnemySpawner
{
    Default
    {
        //$Category AREAG-Enemies
        //$Title Ob Archer
        //$Sprite KNIGA2A8
        EnemySpawner.EnemyType "ObArcher";
        Height 62;
        Radius 16;
        Scale 1.1;
    }
}

class ObArcher : BasicEnemy
{
    Default
    {
        Scale 1.1;
        reactiontime 10;
        gravity 1.2;
        Height 62;
        Radius 16;
        Health 30;
        Mass 9999;
        speed 5;
        maxdropoffheight 128;
        +MISSILEMORE;
    }

    int maxPatienceTime;
    int patienceTime;
    int maxWatchTime;
    int watchTime;
    int maxDrawTime;
    int drawTime;

    override void MonsterInit() {
        maxPatienceTime = 10;
        maxWatchTime = 70;
        maxDrawTime = 15;

        patienceTime = 0;
        drawTime = maxDrawTime;
        watchTime = maxWatchTime;
    }

    action State A_ArcherChase(double spd) {
        if(bNODROPOFF) {
            bNODROPOFF = false;
        }

        if(invoker.patienceTime > 0) {
            if(!CheckIfTargetInLOS(90, 0, 0, 0)) {
                invoker.patienceTime--;
            }
        } else {
            A_FaceTarget();
            NewChaseDir();
            invoker.patienceTime = invoker.maxPatienceTime;
        }

        speed = spd;
        A_Chase(null, null, CHF_NORANDOMTURN);

        if(CheckIfTargetInLOS(0, 0, 0, 0)) {
            if(Distance3D(invoker.target) < 1024) {
                if(invoker.watchTime > 0) {
                    invoker.watchTime -= random(1, 3);
                } else {
                    invoker.watchTime = invoker.maxWatchTime;
                    return ResolveState("Draw");
                }
            }
        }

        return ResolveState(null);
    }

    action State A_DrawChase(double spd) {
        speed = spd;
        if(!bNODROPOFF) {
            bNODROPOFF = true;
        }

        A_Chase(null, null, CHF_FASTCHASE);
        A_FaceTarget();

        if(invoker.drawTime > 0) {
            invoker.drawTime -= random(1, 3);
            return ResolveState(null);
        } else {
            invoker.drawTime = invoker.maxDrawTime;
            return ResolveState("Missile");
        }
    }

    override void monsterPainSound(Name mod) {
        A_StartSound("monster/brute/pain", CHAN_BODY);
    }

    override void monsterDeathSound(Name mod) {
        A_StartSound("monster/archer/death", CHAN_VOICE);
    }

    States
    {
    Spawn:
        KNIG A 1 A_LookEx(0.0, 0.0, 640.0, 1280.0, 90.0, "See");
        wait;
    See:
        KNIG ABCD 4 A_ArcherChase(10);
        loop;
    Draw:
        KNIG E 2;
        KNIG E 0 A_StartSound("monster/archer/draw", CHAN_WEAPON);
        KNIG G 5 A_DrawChase(frandom(3, 5));
        KNIG G 10 A_StopXY();
        goto Draw+2;
    Missile:
        KNIG E 0 A_StartSound("monster/archer/shoot", CHAN_WEAPON);
        KNIG E 1 A_SpawnProjectile("ObArcherArrow", 40.7, 12.1, 0, 0, 0);
        KNIG H 1;
        goto See;
    Death:
        KNIG H 0 A_DeathSequence(EDS_VerticalSquash);
        KNIG H 1;
        wait;
    }
}

class ObArcherArrow : FastProjectile
{
    Default
    {
        damagefunction (15);
        speed 70;
        missiletype "ObArcherArrowTrail";
        missileheight 8;
        scale 0.75;
    }

    States
    {
    Spawn:
        SPRK A 0;
        SPRK A 0 A_StartSound("monster/archer/arrow", CHAN_BODY, CHANF_LOOP, 0.3);
        SPRK A 1;
        wait;
    Death:
        SPRK A 0 A_StopSound(CHAN_BODY);
        stop;
    }
}

class ObArcherArrowTrail : BasicEffect
{
    Default
    {
        scale 0.25;
    }
    States
    {
    Spawn:
        SPRK A 5;
        stop;
    }
}

class TimepiecePickup : BasicActiveInventory
{
    Default
    {
        BasicInventory.PickupType PICKTYPE_TREASURE;
        BasicInventory.PickupID PICKMSG_TIMEPIECE;
        BasicInventory.Checkitem "TimepieceTrigger";
        Scale 2.5;
    }

    override void giveItemTrigger(AREAGPlayerPawn plr) {
		plr.pushToggleTrigger(new("ToggleStateMap").Init("TimestopFlag", "TimepieceOff"));
	}

	States
	{
	SpawnFrames:
		TPIE A 1;
		loop;
	}
}

class TimestopFlag : Once {}

class TimepieceTrigger : BasicActiveTrigger
{
    Default
    {
        inventory.icon "ICOIN3";
    }

	States
	{
	TreasureUse:
		TNT1 A 0 A_TimepieceOn();
		TNT1 A 0; //A_SetInterruptState("TimepieceSelect");
		fail;
	}
}

extend class BasicActiveTrigger
{
	action void A_TimepieceOn() {
		if(CountInv("TimestopFlag") == 0) {
			console.printf("Turning timestop on");
			ACS_NamedExecuteAlways("map_pauseMovingSectors");
			A_GiveInventory("TimestopFlag", 1);
			A_GiveInventory("TimepieceTimestop", 1);
			bNOTIMEFREEZE = true;
		} else {
			A_TimepieceOff();
		}
	}

	action void A_TimepieceOff() {
		console.printf("Turning timestop off");
		ACS_NamedExecuteAlways("map_resumeMovingSectors");
		A_TakeInventory("TimestopFlag", 1);
		A_TakeInventory("TimepieceTimestop", 1);
		bNOTIMEFREEZE = false;
	}

    States
    {
    TimepieceOff:
		TNT1 A 0 A_TimepieceOff();
		TNT1 A 0 A_ClearInterruptState();
		fail;
    }
}

class TimepieceTimestop : PowerTimeFreezer
{
	Default
	{
  		+INVENTORY.HUBPOWER;
		powerup.duration 0x7FFFFFFF;
	}
}

#library "drone"
#include "zcommon.acs"
#include "COMMFUNC.acs"
#include "MAPFUNC.acs"

script "drone_activate" (void)
{
	int pln = PlayerNumber();
	int ang = GetActorAngle(0);
	SetActivator(0, AAPTR_MASTER);
	Thing_ChangeTID(0, pln+2000);
	
	SetActivator(pln+1000);
	FadeTo(0.0, 0.4, 0.0, 1.0, 0.03);
	Delay(1);
	SpawnSpotForced("DronePlayerDummy", 0, pln+3000, GetActorAngle(0) >> 8);
	Warp(pln+2000, 0, 0, 0, 0, WARPF_STOP);
	transformToDrone(ActivatorTID(), false);
	PlaySound(ActivatorTID(), "drone/activate", CHAN_BODY);
	FadeTo(0.0, 0.4, 0.0, 0.0, 0.8);
    SetHudSize(1024, 768, false);
    SetFont("DRONETBG");
    HudMessage(s:"A"; HUDMSG_FADEOUT, 202, CR_UNTRANSLATED, 512.0, 384.0, 0.4, 0.2);
	Thing_Remove(pln+2000);
	
	SetInventory("LevelNumTracker", GetLevelInfo(LEVELINFO_LEVELNUM));
}

script "drone_disengage" (void)
{
	TakeInventory("DroneFlag", 1);
	
	if(CheckInventory("LevelNumTracker") != GetLevelInfo(LEVELINFO_LEVELNUM))
	{
		int num = CheckInventory("LevelNumTracker");
		FadeTo(0.0, 0.4, 0.0, 1.0, 0.03);
		Delay(1);
		ACS_NamedExecuteAlways("drone_warpback", num, true);
		ACS_NamedExecuteAlways("map_switchto", 0, num, 0, true);
	}
	else
	{
		FadeTo(0.0, 0.4, 0.0, 1.0, 0.0);
		ACS_NamedExecuteAlways("drone_warpback", 0);
	}
}

script "drone_warpback" (int changeMap)
{
	int pln = PlayerNumber();
	
	PlaySound(ActivatorTID(), "drone/disengage", CHAN_BODY);
	if(changeMap)
	{
		Delay(10);
	}
	Warp(pln+3000, 0, 0, 0, 0, WARPF_STOP);
	SetActorAngle(0, GetActorAngle(pln+3000));
	Thing_Remove(pln+3000);
	TransformFromDrone(pln+1000, false);
	FadeTo(0.33, 0.76, 0.07, 0.0, 0.8);
}

script "drone_curtain" (int toDrone) {
	if(toDrone) {
		FadeTo(0.0, 0.4, 0.0, 1.0, 0.03);
		Delay(1);
		FadeTo(0.0, 0.4, 0.0, 0.0, 0.8);
		SetHudSize(1024, 768, false);
		SetFont("DRONETBG");
		HudMessage(s:"A"; HUDMSG_FADEOUT, 202, CR_UNTRANSLATED, 512.0, 384.0, 0.4, 0.2);
	} else {
		FadeTo(0.0, 0.4, 0.0, 1.0, 0.03);
		Delay(1);
		FadeTo(0.33, 0.76, 0.07, 0.0, 0.8);
	}
}

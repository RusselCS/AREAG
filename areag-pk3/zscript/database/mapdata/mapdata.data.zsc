/*
Gateway Notes:

Pillar waterfall room: -1::1
Double Waterfall room: -2::-1
Eastern Save room -2
Trap Room with secret door behind waterfall: -2
Red door dropdown: -1
*/

class MapUtilInit : StaticEventHandler
{
    Array<AREAGMapData> maps;
    AREAGMapData latestMap;
    int excludeMaps;

    override void NewGame() {
        if(maps.size() > 0) {
            maps.clear();
        }

        AREAGRoomData latestRoom;

        addMap(new("AREAGMapData").Init(1, "ADV00", "MCRNE_00", "$NAME_ADV00", "TI00", "SAVE_OUTSKIRTS", "Outskirts"));
        latestMap.addPickup("IronShieldPickup");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");          // 5
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");          // 10
        latestMap.addPickup("EmptyItem");
        
        addMap(new("AREAGMapData").Init(2, "ADV01", "MCRNE_01", "$NAME_ADV01", "TI01", "SAVE_GATEWAY", "Grand Gateway"));
        latestMap.addPickup("EmptyItem");          
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("KnifePouchPickup");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");          // 5
        latestMap.addPickup("RubyKeyPickup");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");          // 10
        latestMap.addPickup("EmptyItem");

        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("entryway", -1));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("underhalls", -1));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("the gantlet", -1));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("the focus", 0)); // 03
        latestRoom.addFloorZ(1280);
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("the waste tunnels", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("the crusher", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("dead simple", -1)); // 06
        latestRoom.addFloorZ(992);
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("tricks and traps", -1)); // 07
        latestRoom.addFloorZ(992);
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("the pit", -1));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("refueling base", -1));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("'o' of destruction!", -1)); // 10
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("the factory", -1));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("downtown", -1));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("the inmost dens", -1));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("industrial zone", -1));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("suburbs", -1));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("tenements", -1));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("the courtyard", -1)); // 17
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("the citadel", -1)); // 18
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("gotcha!", -1));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("nirvana", -1)); // 20
        latestRoom.addFloorZ(768);
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("the catacombs", -1)); // 21
        latestRoom.addFloorZ(848);
        latestRoom.addFloorZ(1336);
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("barrels o' fun", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("the chasm", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("bloodfalls", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("the abandoned mines", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("monster condo", 1));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("the spirit world", 1));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("the living end", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("icon of sin", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("wolfenstein", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("grosse", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("congo", 0)); // 32
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("well of souls", -1));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("aztec", -1));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("caged", -1));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("ghost town", -1));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("baron's lair", -1));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("caughtyard", -1));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("realm", -1));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("abattoire", -1));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("onslaught", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("hunted", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("speed", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("the crypt", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("genesis", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("the twilight", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("the omen", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("compound", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("neurosphere", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("nme", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("the death domain", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("slayer", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("impossible mission", 1));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("tombstone", 1));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("the final frontier", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("the temple of darkness", -1));
        latestRoom.addFloorZ(1168);
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("bunker", -1));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("anti-christ", -1));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("the sewers", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("odyssey of noises", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("the gateway of hell", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("cyberden", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("go 2 it", 0));
        latestRoom = latestMap.addRoom(new("AREAGRoomData").Init("system control", 0));
        
        addMap(new("AREAGMapData").Init(3, "ADV02", "MCRNE_02", "$NAME_ADV02", "TI03", "SAVE_STUDY", "Queen's Study"));
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("DronePickup");
        latestMap.addPickup("BolaSackPickup");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");          // 5
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");          // 10
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");          // 15
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");          // 20
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");

        addMap(new("AREAGMapData").Init(4, "ADV03", "MCRNE_03", "$NAME_ADV03", "TI02", "SAVE_IMPACT", "Lost Impact"));
        latestMap.addPickup("GearGreavesPickup");
        latestMap.addPickup("DynamiteCratePickup");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");          // 5
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");          // 10
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");          // 15
        latestMap.addPickup("EmptyItem");
        latestMap.addPickup("EmptyItem");

        addMap(new("AREAGMapData").Init(5, "ADV04", "MCRNE_04", "$NAME_ADV04", "TI03", "SAVE_DUNGEON", "King's Dungeon"));

        // addMap(new("AREAGMapData").Init(5, "ADV04", "MCRNE_04", "$NAME_ADV04", "TI04", "SAVE_THIRST"));
        // addMap(new("AREAGMapData").Init(6, "ADV05", "MCRNE_05", "$NAME_ADV05", "TI05", "SAVE_DUNGEON"));
        // addMap(new("AREAGMapData").Init(7, "ADV06", "MCRNE_06", "$NAME_ADV06", "TI06", "SAVE_ENGINE"));
        // addMap(new("AREAGMapData").Init(8, "ADV07", "MCRNE_07", "$NAME_ADV07", "TI07", "SAVE_SHADOWS"));
        // addMap(new("AREAGMapData").Init(9, "ADV08", "MCRNE_08", "$NAME_ADV08", "TI08", "SAVE_TEMPORAL"));
        // addMap(new("AREAGMapData").Init(10, "ADV09", "MCRNE_09", "$NAME_ADV09", "TI09", "SAVE_THRONE"));
        
        addMap(new("AREAGMapData").Init(100, "TESTMAP", "MCRNE_09", "$NAME_ADV09", "TIX0", "SAVE_TESTMAP_1", "TESTMAP"));
        // Tier 1 Subweapons
        latestMap.addPickup("KnifePouchPickup");
        latestMap.addPickup("SeedPouchPickup");
        latestMap.addPickup("DynamiteCratePickup");
        latestMap.addPickup("SoulLampPickup");
        latestMap.addPickup("BolaSackPickup"); // 5
        latestMap.addPickup("RevolverPickup");
        
        // Tier 2 Subweapons
        latestMap.addPickup("SparkKnifeUpgrade");
        latestMap.addPickup("FertilizerUpgrade");
        latestMap.addPickup("ClusterChargeUpgrade");
        latestMap.addPickup("AnchorBeadsUpgrade");  // 10
        latestMap.addPickup("CounterWeightUpgrade");
        latestMap.addPickup("LaserGunUpgrade");

        // Subweapon hats
        latestMap.addPickup("KnifeHatPickup");
        latestMap.addPickup("SeedHatPickup");
        latestMap.addPickup("DynamiteHatPickup"); // 15
        latestMap.addPickup("SoulHatPickup");
        latestMap.addPickup("BolaHatPickup");
        latestMap.addPickup("RevolverHatPickup");

        // Subweapon super scrolls
        latestMap.addPickup("DaggerDanceScroll");
        latestMap.addPickup("FrenzyWaveScroll"); // 20
        latestMap.addPickup("BigBangScroll");
        latestMap.addPickup("SpectralEchoesScroll");
        latestMap.addPickup("SpinCycleScroll");
        latestMap.addPickup("PhotonEraserScroll");

        // Mobility Upgrades
        latestMap.addPickup("BeeDronePickup"); // 25
        latestMap.addPickup("DronePickup");
        latestMap.addPickup("NovaPackPickup");
        latestMap.addPickup("GearGreavesPickup");
        latestMap.addPickup("SteamGreavesPickup");

        // Keys
        latestMap.addPickup("MembershipCardPickup"); // 30
        latestMap.addPickup("MinecartPassPickup");
        latestMap.addPickup("HornPickup");
        latestMap.addPickup("DarkEyePickup");
        latestMap.addPickup("RubyKeyPickup");
        latestMap.addPickup("CobaltKeyPickup"); // 35
        latestMap.addPickup("PeridotKeyPickup");
        latestMap.addPickup("GoldKeyPickup");

        // Passive hats
        latestMap.addPickup("TopHatPickup");
        latestMap.addPickup("ExplorerHatPickup");
        latestMap.addPickup("PirateHatPickup"); // 40
        latestMap.addPickup("ChefToquePickup");
        latestMap.addPickup("MiningHatPickup");
        latestMap.addPickup("BatteryHatPickup");
        latestMap.addPickup("BerserkerHelmetPickup");
        latestMap.addPickup("PlagueMaskPickup"); // 45

        // Melee weapons
        latestMap.addPickup("LeatherWhipPickup");
        latestMap.addPickup("ChainWhipPickup");
        latestMap.addPickup("LaserWhipPickup");
        latestMap.addPickup("IronShieldPickup");
        latestMap.addPickup("ChakramShieldPickup"); // 50
        latestMap.addPickup("GravityGlovesPickup");

        // Passive scrolls
        latestMap.addPickup("QuickReflexesScroll");
        latestMap.addPickup("SwimmingLessonsScroll");
        latestMap.addPickup("GripLashScroll");
        latestMap.addPickup("EfficientVandalScroll"); // 55
        latestMap.addPickup("MedicalRecordsScroll");
        latestMap.addPickup("ShockAbsorberScroll");

        // Passive upgrades
        latestMap.addPickup("WardingPendantPickup");
        latestMap.addPickup("SilverCuirassPickup");
        latestMap.addPickup("ClockBeltPickup"); // 60
        latestMap.addPickup("BadgePickup");

        // Toggle items
        latestMap.addPickup("TransceiverPickup");
        latestMap.addPickup("PauldronPickup");
        latestMap.addPickup("GogglesPickup");
        latestMap.addPickup("TimepiecePickup"); // 65
        latestMap.addPickup("SpectreCloakPickup");
        latestMap.addPickup("MonocleterPickup");
        latestMap.addPickup("ShadowMeldPickup");

        // Consumables - Spawned by Shop in the TestMap
        latestMap.addPickup("ArmorCrashPickup");
        latestMap.addPickup("MaxAmmoUp"); // 70
        latestMap.addPickup("MaxHealthUp");
        latestMap.addPickup("AmmoPickup");
        latestMap.addPickup("ArmorPickup");
        latestMap.addPickup("FoodPickup");
        latestMap.addPickup("DrinkPickup"); // 75
        latestMap.addPickup("LuminiteOrbPickup");

        addMap(new("AREAGMapData").Init(101, "TESTMAP2", "MCRNE_09", "$NAME_ADV09", "TIX1", "SAVE_TESTMAP_2", "TESTMAP"));
        addMap(new("AREAGMapData").Init(999, "ADVOUT", "MCRNE_09", "$NAME_ADV09", "TIX1", "SAVE_TESTMAP_2", "TESTMAP"));

        excludeMaps = 3;
    }

    private void AddMap(AREAGMapData map)
    {
        maps.push(map);
        latestMap = map;
    }
}

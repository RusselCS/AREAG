class KnifeAmmo : Ammo {
    Default {
        inventory.icon "ICOSW1";
        inventory.amount 1;
        inventory.maxamount 10;
    }
}

class KnifePouchPickup : SubWeaponPickup
{
    Default
    {
        BasicInventory.PickupID PICKMSG_KNIFE;
        BasicInventory.PickupType PICKTYPE_SUBWEAPON;
        SubWeaponPickup.AmmoType "KnifeAmmo";
        SubWeaponPickup.AmmoGive 10;
        SubWeaponPickup.WeaponName "Knife";

        Scale 2.0;
    }

    override SubWeapon subStateBuilder() {
        StateLabel rS = "KnifeRaise";

        return buildSubWeapon(rS);
    }

	States
	{
	SpawnFrames:
		SUBK A 1;
		loop;
	}
}

extend class AREAGProtoWeapon {

	States
    {
        KnifeRaise:
            SKHD DCBA 1;
            goto KnifeReady;
        KnifeReady:
            SKHD A 1 A_SubWeaponReady("KnifeWindup", "KnifeOffWindup", "KnifeLower");
            wait;
        KnifeWindup:
            SKHD A 0 A_StartSubFiringSequence();
            SKHD AABCD 1;
            goto KnifeHold;
        KnifeHold:
            TNT1 A 1;
            TNT1 A 0 A_SubHoldCheck("KnifeHold");
            goto KnifeFire;
        KnifeFire:
            HBMA A 0 A_StartSound("weapon/knifethrow", CHAN_WEAPON);
            HBMA A 0 A_TakeInventory("KnifeAmmo", 1);
            HBMA A 0 A_FireProjectile("ThrowKnife");
            HBMA ABCDE 1;
            TNT1 A 6;
            TNT1 A 0 A_FinishSubFiringSequence();
            TNT1 AAAAAAAAAAAAAAAAAAAAA 1 A_SubRefire("KnifeHoldRefire", "KnifeWait");
            goto KnifeRaise;
        KnifeOffWindup:
            SKHD ABCD 1;
            goto KnifeWait;
        KnifeWait:
            TNT1 A 1;
            TNT1 AAAAAAAAAAAAAAAAAAAA 1 A_CheckMainStatus("KnifeHoldRefire", "KnifeWait");
            goto KnifeRaise;
        KnifeHoldRefire:
            HBM2 A 0 A_StartSubFiringSequence();
            goto KnifeHold;
        KnifeLower:
            SKHD ABCD 1;
            goto AltRaise;
	}
}

class ThrowKnife : BasicFastProjectile
{
    Default
    {
        PROJECTILE;
        +BLOODSPLATTER;
        +FORCEXYBILLBOARD;
        missiletype "KnifeTrail";
        missileheight 8;
        Radius 6;
        Height 7;
        DamageFunction (15);
        speed 100;
        scale 2.0;
    }
	States
	{
	Spawn:
        SUBK W 1;
        loop;
	Death:
        SUBK W 0 A_StartSound("weapon/knifewall", CHAN_WEAPON);
        SUBK W 0 A_SpawnItemEx("KnifeDeath", 0, 0, 0);
        SUBK W 0 A_AlertMonsters(96);
        stop;
	Crash:
	XDeath:
        //SUBK W 0 A_StartSound("weapon/knifehit", CHAN_AUTO, 1.0, false, ATTN_NONE);
        SUBK W 0;
	    stop;
	}
}

class KnifeTrail : BasicEffect
{
    Default
	{
        scale 2.0;
        renderstyle "Add";
        +FORCEXYBILLBOARD;
        alpha 0.8;
    }
	States
	{
	Spawn:
        SUBK X 1 A_FadeOut(0.2);
        wait;
	}
}

class KnifeDeath : BasicEffect
{
    Default
    {
        -NOINTERACTION;
        +FORCEXYBILLBOARD;
        scale 2.0;
        height 1;
        radius 1;
    }
	States
	{
	Spawn:
        SUBK W 0;
        SUBK W 0 A_CheckFloor("Floor");
        SUBK W 0 A_JumpIf(ceilingz - pos.z < 16, "Ceiling");
        SUBK W 0 { bNOINTERACTION = true; }
        SUBK W 0 A_SetAngle(angle+frandom(-18.0, 18.0));
        SUBK W 0 A_ChangeVelocity(-10, 0, 5, CVF_REPLACE|CVF_RELATIVE);
        SUBK W 1 A_SetAngle(angle+45);
        SUBK W 0 A_FadeOut(0.05);
        SUBK W 0 A_ChangeVelocity(0, 0, -1);
        goto Spawn+6;
	Floor:
        SUBK W 0 { bNOINTERACTION = true; }
        SUBK W 0 A_SetAngle(angle+frandom(-10.0, 10.0));
        SUBK W 0 A_ChangeVelocity(10, 0, 5, CVF_REPLACE|CVF_RELATIVE);
        SUBK W 1 A_SetAngle(angle+45);
        SUBK W 0 A_FadeOut(0.05);
        goto Floor+3;
	Ceiling:
        SUBK W 0 { bNOINTERACTION = true; }
        SUBK W 0 A_SetAngle(angle+frandom(-10.0, 10.0));
        SUBK W 0 A_ChangeVelocity(10, 0, 0, CVF_REPLACE|CVF_RELATIVE);
        SUBK W 1 A_SetAngle(angle+45);
        SUBK W 0 A_FadeOut(0.05);
        goto Ceiling+3;
	}
}

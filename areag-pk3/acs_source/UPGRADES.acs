#library "upgrades"
#include "zcommon.acs"
#include "commfunc.acs"

// UPGRADE HANDLERS

#define MAX_TYPES 4
#define MAX_UPGRADES 27

int pickupColors[MAX_TYPES][3] = {
	{0.00, 0.28, 0.38}, // Artifice - Passive Permanent Upgrade
	{0.69, 0.00, 0.13}, // Champion - Main Weapon
	{0.80, 0.30, 0.00}, // Tributary - Sub Weapon
	{0.00, 0.52, 0.22}//, // Prosperity - Treasure, Use Items, Puzzle Items
};

str pickupTypes[MAX_TYPES][4] = {
{"Artifice", "ARTIBG", "ARTITX", "upgrade/artifice"},
{"Champion", "WEAPBG", "WEAPTX", "upgrade/weapon"},
{"Tributary", "SUBWBG", "SUBWTX", "upgrade/offense"},
{"Prosperity", "UTILBG", "UTILTX", "upgrade/treasure"}
};

str pickupInfo[MAX_UPGRADES][2] = {
{"AR_GEARGREAVES", "PU_GEARGREAVES"},
{"AR_STEAMGREAVES", "PU_STEAMGREAVES"},
{"AR_KNIFEPOUCH", "PU_KNIFEPOUCH"},
{"AR_HEALTHUP", "PU_HEALTHUP"},
{"AR_DYNAMITECRATE", "PU_DYNAMITECRATE"},
{"AR_NOVAPACK", "PU_NOVAPACK"},
{"AR_SPIDERDRONE", "PU_SPIDERDRONE"},
{"AR_BEEDRONE", "PU_BEEDRONE"},
{"AR_STEELTYRANT", "PU_STEELTYRANT"},
{"AR_IRONSHIELD", "PU_IRONSHIELD"},
{"AR_RUBYKEY", "PU_RUBYKEY"},
{"AR_COBALTKEY", "PU_COBALTKEY"},
{"AR_PERIDOTKEY", "PU_PERIDOTKEY"},
{"AR_GOLDKEY", "PU_GOLDKEY"},
{"AR_RITUALHORN", "PU_RITUALHORN"},
{"AR_GRAVITYGLOVES", "PU_GRAVITYGLOVES"},
{"AR_SEEDPOD", "PU_SEEDPOD"},
{"AR_LEATHERWHIP", "PU_LEATHERWHIP"},
{"AR_LASERWHIP", "PU_LASERWHIP"},
{"AR_CHAKRAMSHIELD", "PU_CHAKRAMSHIELD"},
{"AR_SOULLAMP", "PU_SOULLAMP"},
{"AR_BOLA", "PU_BOLA"},
{"AR_REVOLVER", "PU_REVOLVER"},
{"AR_PENDANT", "PU_PENDANT"},
{"AR_EFFICIENTVANDAL", "PU_EFFICIENTVANDAL"},
{"AR_MININGHAT", "PU_MININGHAT"},
{"AR_TOPHAT", "PU_TOPHAT"},
};

script "pickups_displayMessage" (int type, int which)
{
	if(type == -1 && which == -1) {
		type = 3;
		LocalAmbientSound(pickupTypes[type][3], 128);
		FadeTo(pickupColors[type][0], pickupColors[type][1], pickupColors[type][2], 0.8, 0.0);
		SetHudSize(1280, 960, 0);
		SetFont(pickupTypes[type][1]);
		HudMessage(s:"A"; HUDMSG_FADEOUT, 9, CR_UNTRANSLATED, 600.4, 210.0, 3.0, 0.4);
		SetFont(pickupTypes[type][2]);
		HudMessage(s:"A"; HUDMSG_FADEOUT, 8, CR_UNTRANSLATED, 600.4, 210.0, 0.5, 0.8);
		SetFont("AREAFONT");
		HudMessage(l:"CAN YOU BELIEVE IT"; HUDMSG_FADEOUT, 7, CR_UNTRANSLATED, 600.4, 200.0, 3.0, 0.4);
		SetFont("DESCFONT");
		HudMessage(l:"It's fucking nothing!"; HUDMSG_FADEOUT, 6, CR_UNTRANSLATED, 600.4, 265.0, 3.0, 0.4);
		HudMessage(s:"WOW!"; HUDMSG_FADEOUT, 5, CR_UNTRANSLATED, 600.4, 140.0, 3.0, 0.4);
		FadeTo(pickupColors[type][0], pickupColors[type][1], pickupColors[type][2], 0.0, 0.3);
	} else {
		LocalAmbientSound(pickupTypes[type][3], 128);
		FadeTo(pickupColors[type][0], pickupColors[type][1], pickupColors[type][2], 0.8, 0.0);
		SetHudSize(1280, 960, 0);
		SetFont(pickupTypes[type][1]);
		HudMessage(s:"A"; HUDMSG_FADEOUT, 9, CR_UNTRANSLATED, 600.4, 210.0, 3.0, 0.4);
		SetFont(pickupTypes[type][2]);
		HudMessage(s:"A"; HUDMSG_FADEOUT, 8, CR_UNTRANSLATED, 600.4, 210.0, 0.5, 0.8);
		SetFont("AREAFONT");
		HudMessage(l:pickupInfo[which][0]; HUDMSG_FADEOUT, 7, CR_UNTRANSLATED, 600.4, 200.0, 3.0, 0.4);
		SetFont("DESCFONT");
		HudMessage(l:pickupInfo[which][1]; HUDMSG_FADEOUT, 6, CR_UNTRANSLATED, 600.4, 265.0, 3.0, 0.4);
		HudMessage(s:pickupTypes[type][0]; HUDMSG_FADEOUT, 5, CR_UNTRANSLATED, 600.4, 140.0, 3.0, 0.4);
		FadeTo(pickupColors[type][0], pickupColors[type][1], pickupColors[type][2], 0.0, 0.3);
	}
}

script "drone_curtain" (int toDrone) {
	if(toDrone) {
		FadeTo(0.0, 0.4, 0.0, 1.0, 0.03);
		Delay(1);
		FadeTo(0.0, 0.4, 0.0, 0.0, 0.8);
		SetHudSize(1024, 768, false);
		SetFont("DRONETBG");
		HudMessage(s:"A"; HUDMSG_FADEOUT, 202, CR_UNTRANSLATED, 512.0, 384.0, 0.4, 0.2);
	} else {
		FadeTo(0.0, 0.4, 0.0, 1.0, 0.03);
		Delay(5);
		FadeTo(0.33, 0.76, 0.07, 0.0, 0.8);
	}
}

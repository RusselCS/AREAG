class ZSCAdventureWhip : AREAGProtoWeapon
{
	bool swingLeft;
    Default
    {
        Weapon.SlotNumber 1;
        Obituary "%o was whipped into shape by %k's Adventurer's Whip.";
        Inventory.Pickupmessage "Retrieved your trusty whip!";
    }

	override void postBeginPlay() {
		super.postBeginPlay();
		swingLeft = false;
	}

	action State A_SwingWhip() {
		invoker.swingLeft = !invoker.swingLeft;
		if(invoker.swingLeft) {
			return ResolveState("SwingLeft");
		} else {
			return ResolveState("SwingRight");
		}
		return ResolveState(Null);
	}

	States
	{
	Ready:
		TNT1 A 0 A_ReadySubWeapons();
	ReadyRaise:
		TNT1 A 0 A_AREAGRaiseSub();
		WHP1 DCBA 1;
		goto ReadyLoop;
	ReadyLoop:
		WHP1 A 1 A_AREAGWeaponReady();
		loop;
	Fire:
		WHP1 A 0 A_AREAGLowerSub();
	MainLower:
		WHP1 AABCD 1;
	Hold:
		TNT1 A 1;
		TNT1 A 0 A_AREAGRefire();
		goto MainRelease;
	MainRelease:
		WHPL A 0 A_PlaySound("weapon/whipswing", CHAN_WEAPON);
		TNT1 A 0 A_SwingWhip();
	SwingLeft:
		WHPL ABC 1 A_SetAngle(angle+0.2);
		WHPL A 0 A_FireProjectile("WhipProjectileL", 0, 0, 0);
		WHPL DEZ 1 A_SetAngle(angle+0.2);
		TNT1 A 6;
		goto FireEnd;
	SwingRight:
		WHPL FGH 1 A_SetAngle(angle-0.2);
		WHPL A 0 A_FireProjectile("WhipProjectileR", 0, 0, 0);
		WHPL IJK 1 A_SetAngle(angle-0.2);
		TNT1 A 6;
		goto FireEnd;
	AltLower:
		WHP1 AABCD 1;
		goto AltHold;
	}
}

class WhipLash : Ammo
{
    Default
    {
        inventory.amount 1;
	    inventory.maxamount 20;
    }
}

class WhipProjectileL : BasicFastProjectile
{
    Default
    {
        Speed 40;
        DamageFunction (20);
        +NOTIMEFREEZE;
        +HITTRACER;
        +BLOODSPLATTER;
        radius 4;
        radius 2;
    }
	States
	{
	SpawnLoop:
		TNT1 A 1;
		TNT1 A 1;
		TNT1 A 0 A_PlaySound("weapon/whipcrack", CHAN_BODY);
		TNT1 A 0 A_AlertMonsters(512);
		stop;
	XDeath:
		TNT1 A 0 A_PlaySound("weapon/whipstrike", CHAN_BODY);
		TNT1 A 0 A_SpawnItemEx("WhipQuake");
		stop;
	Crash:
	Death:
		TNT1 A 0 A_PlaySound("weapon/whipwall", CHAN_BODY);
		TNT1 AAA 0 A_SpawnItemEx("WhipPuff", 0, 0, 0, frandom(0.4, 1.0), 0, frandom(-1.0, 1.0), frandom(0.0, 360.0));
		TNT1 A 0 A_SpawnItemEx("WhipQuake");
		stop;
	}
}

class WhipProjectileR : WhipProjectileL {}

class WhipQuake : Actor
{
    Default
    {
        +NOINTERACTION;
	    +NOCLIP;
    }
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 Radius_Quake(1, 4, 0, 32, 0);
		TNT1 A 1;
		stop;
	}
}

class WhipPuff : BasicEffect
{
    Default
    {
        -NOINTERACTION;
        +FORCEXYBILLBOARD;
        +ROLLSPRITE;
        -ACTIVATEIMPACT;
        +MOVEWITHSECTOR;
        bouncetype "hexen";
        alpha 0.4;
        scale 1.5;
    }
	States
	{
	Spawn:
		WHPF A 0;
		WHPF A 0 A_SetRoll(frandom(0.0, 360.0));
		WHPF ABCD 2;
		stop;
	}
}

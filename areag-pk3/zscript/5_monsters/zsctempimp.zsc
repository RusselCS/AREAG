class ZSCDoomImp : DoomImp replaces DoomImp
{
	int kbTime;

	override int DamageMobj(Actor inflictor, Actor source, int damage, Name mod, int flags, double angle) {

		int ang = inflictor.angle % 360;

		if(mod == "SteelWhip" || mod == "LaserWhip") {
			A_SpawnItemEx("KnockBackTrail", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPRITEFRAME);
			A_ChangeVelocity(cos(ang)*90, sin(ang)*90, 0, CVF_REPLACE);
			kbTime = 2;
		} else if(mod == "TribalShield") {
            A_SpawnItemEx("KnockBackTrail", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPRITEFRAME);
			A_ChangeVelocity(cos(ang)*90, sin(ang)*90, 0, CVF_REPLACE);
			kbTime = 4;
        }

		return super.DamageMobj(inflictor, source, damage, mod, flags, angle);
	}

	override void Tick() {

		super.Tick();

		if(kbTime > 0) {
			kbTime--;
			if(kbTime == 0) {
				A_ScaleVelocity(0.1);
			} else {
				A_SpawnItemEx("KnockBackTrail", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPRITEFRAME);
			}
		}
	}
}

class KnockBackTrail : BasicEffect {
	Default {
		Alpha 0.8;
		scale 1.025;
	}

	States {
		Spawn:
			"----" "#" 0;
			"----" "#" 0 A_SetScale(scale.x*1.025);
			"----" "#" 0 Radius_Quake(2, 4, 0, 32, 0);
			"----" "#" 1;
			"----" "#" 0 A_FadeOut(0.2);
			loop;
	}
}

class ZSCImpKnife : FastProjectile replaces DoomImpBall
{
	Default {
		PROJECTILE;
		+BLOODSPLATTER;
		+FORCEXYBILLBOARD;
		missiletype "ImpKnifeTrail";
		missileheight 8;
		Radius 6;
		Height 7;
		DamageFunction (15);
		speed 100;
		scale 2.0;
	}
	States
	{
	Spawn:
		SUBK W 1;
		loop;
	Death:
		SUBK W 0 A_StartSound("weapon/knifewall", CHAN_WEAPON);
		SUBK W 0 A_SpawnItemEx("KnifeDeath", 0, 0, 0);
		SUBK W 0 A_AlertMonsters(96);
		stop;
	Crash:
	XDeath:
		SUBK W 0 A_StartSound("weapon/knifehit", CHAN_AUTO, 1.0, false, ATTN_NONE);
		SUBK W 0;
		stop;
	}
}

class ImpKnifeTrail : BasicEffect
{
	Default
	{
		scale 2.0;
		renderstyle "Add";
		+FORCEXYBILLBOARD;
		alpha 0.8;
	}
	States
	{
	Spawn:
		SUBK X 1 A_FadeOut(0.2);
		wait;
	}
}

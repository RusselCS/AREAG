// The root of it all. Contains the essential features that get wrapped into all other weapons.

class AREAGProtoWeapon : Weapon {

    bool bMainInProgress;
    bool bSubInProgress;
    int iLastSubWeapon;
    mixin AREAG_Common;

    AREAGPlayerPawn plr;

    Default
    {
        Weapon.AmmoUse 1;
        Weapon.AmmoGive 20;
        weapon.ammotype2 "WhipLash";
        Weapon.Ammotype "WhipLash";
        +WEAPON.AMMO_OPTIONAL;
        +WEAPON.ALT_AMMO_OPTIONAL;
        +WEAPON.NOALERT;
        +WEAPON.CHEATNOTWEAPON;
    }

    action void A_InitWeap() {
        invoker.bMainInProgress = true;
        invoker.bSubInProgress = true;
        invoker.plr = AREAGPlayerPawn(self);
        invoker.iLastSubWeapon = invoker.plr.iSelectedWep;
        A_GunFlash();
    }

    // Control functions
    action void A_LowerBothHands() {
        invoker.bMainInProgress = true;
        invoker.bSubInProgress = true;
    }

    action State A_MainRaise() {
        invoker.bMainInProgress = false;
        return ResolveState("MainWait");
    }

    States
    {
    // Base weapon states (map to other states automatically)
    Deselect:
        TNT1 A 0;
        goto Lower;
    Select:
        TNT1 A 8;
        TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_Raise;
        TNT1 A 1 A_Raise;
        loop; // goes to Ready after enough calls to A_Raise
    Ready:
        NULL A 0;
        goto Init;
    Fire:
        TNT1 A 0;
        wait;
    AltFire:
        TNT1 A 0;
        wait;
    Flash: // A_GunFlash called by A_InitWeap
        TNT1 A 0;
        goto AltRaise;

    // Shared states, weapons shouldn't override these
    Init:
        TNT1 A 0 A_InitWeap();
        goto Raise;
    Lower:
        TNT1 A 0 A_LowerBothHands();
        TNT1 A 1 A_JumpIf(true, "MainLower");
        wait;
    LowerToDeselect:
        TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_Lower;
        TNT1 A 1 A_Lower;
        loop;
    Raise:
        TNT1 A 1 A_MainRaise();
        wait;
    AltRaise:
        TNT1 A 1 A_SubRaise();
        wait;
    }
}

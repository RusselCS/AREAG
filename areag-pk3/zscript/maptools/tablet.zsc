class TabletActivatable : BasicActionProp
{
	Default
	{
		//$Category AREAG-Map Tools
		//$Title Tablet Marker
		//$Sprite E0WCH0
		Height 64;
		Radius 32;
		-SOLID;
		+CANPASS;
		scale 2.5;
	}

	int tabletNum;
	int eventNum;

	int spc;
	int sargs[5];

	bool isCloseEnough(Actor who) {
        return Distance2D(who) - who.radius - self.radius < 48.0 && abs((who.pos.z + who.height/2) - (self.pos.z + self.height/2)) < self.height;
    }

    override void BasicInit() {
        tabletNum = score;
		spc = special;
		sargs[0] = args[0];
		sargs[1] = args[1];
		sargs[2] = args[2];
		sargs[3] = args[3];
		sargs[4] = args[4];

		special = 0;
		args[0] = 0;
		args[1] = 0;
		args[2] = 0;
		args[3] = 0;
		args[4] = 0;

        A_SpawnItemEx("TabletFXP", 15);
		A_SpawnItemEx("TabletModel", 24, 0, 0, 0, 0, 0, 0, SXF_TRANSFERROLL, 0, tid+100);
    }

    override void BasicActivate(Actor activator) {
        if(isCloseEnough(activator)) {
			If(CountInv("Once") == 0)
			{
				A_GiveInventory("Once", 1);
			}
			master = activator;
            activator.ACS_NamedExecuteAlways("map_tablet", 0, tabletNum, tid);
        }
    }

	States
	{
	Spawn:
		TNT1 A 1;
		wait;
	Trigger:
		TNT1 A 0 { A_CallSpecial(spc, sargs[0], sargs[1], sargs[2], sargs[3], sargs[4]);
			spc = 0;
			sargs[0] = 0;
			sargs[1] = 0;
			sargs[2] = 0;
			sargs[3] = 0;
			sargs[4] = 0;
		}
		goto Spawn;
	}
}

class TabletFXL : BasicEffect
{
	Default
	{
		+USESPECIAL;
		+WALLSPRITE;
		+ROLLSPRITE;
		+ROLLCENTER;
		+NOTIMEFREEZE;
		-SOLID;
		renderstyle "add";
		scale 0.125;
	}
	States
	{
	Spawn:
		TBLT A 0;
		TBLT A 0 A_JumpIfInTargetInventory("Once", 1, "SpawnRead");
		TBLT A 1 BRIGHT A_SetRoll(roll+1);
		loop;
	SpawnRead:
		TBLT AAAAAAAAAA 1 BRIGHT A_SetRoll(roll+1);
		TBLT A 0 A_SetTranslucent(0.9, 1);
		TBLT A 1 BRIGHT A_SetRoll(roll+1);
		TBLT A 0 A_SetTranslucent(0.8, 1);
		TBLT A 1 BRIGHT A_SetRoll(roll+1);
		TBLT A 0 A_SetTranslucent(0.7, 1);
		TBLT A 1 BRIGHT A_SetRoll(roll+1);
		TBLT A 0 A_SetTranslucent(0.6, 1);
		TBLT A 1 BRIGHT A_SetRoll(roll+1);
		TBLT A 0 A_SetTranslucent(0.5, 1);
		TBLT A 1 BRIGHT A_SetRoll(roll+1);
		TBLT A 0 A_SetTranslucent(0.4, 1);
		TBLT A 1 BRIGHT A_SetRoll(roll+1);
		TBLT A 0 A_SetTranslucent(0.3, 1);
		TBLT A 1 BRIGHT A_SetRoll(roll+1);
		wait;
	}
}

class TabletFXP : TabletFXL
{
	States
	{
	Spawn:
		TBLT B 0;
		TBLT B 0 A_JumpIfInTargetInventory("Once", 1, "SpawnRead");
		TBLT B 1 BRIGHT A_SetRoll(roll+1);
		loop;
	SpawnRead:
		TBLT BBBBBBBBBB 1 BRIGHT A_SetRoll(roll+1);
		TBLT B 0 A_SetTranslucent(0.9, 1);
		TBLT B 1 BRIGHT A_SetRoll(roll+1);
		TBLT B 0 A_SetTranslucent(0.8, 1);
		TBLT B 1 BRIGHT A_SetRoll(roll+1);
		TBLT B 0 A_SetTranslucent(0.7, 1);
		TBLT B 1 BRIGHT A_SetRoll(roll+1);
		TBLT B 0 A_SetTranslucent(0.6, 1);
		TBLT B 1 BRIGHT A_SetRoll(roll+1);
		TBLT B 0 A_SetTranslucent(0.5, 1);
		TBLT B 1 BRIGHT A_SetRoll(roll+1);
		TBLT B 0 A_SetTranslucent(0.4, 1);
		TBLT B 1 BRIGHT A_SetRoll(roll+1);
		TBLT B 0 A_SetTranslucent(0.3, 1);
		TBLT B 1 BRIGHT A_SetRoll(roll+1);
		wait;
	}
}

class TabletModel : BasicActor
{
	Default
	{
		+NOGRAVITY;
        height 64;
        radius 8;
		+SOLID;
	}

	override void BasicInit() {
		String act = "TabletHitbox";
        A_SpawnItemEx(act, 0,  24);
        A_SpawnItemEx(act, 0, -24);
	}

	States
	{
	Spawn:
		TBLT C 1;
		wait;
	}
}

class TabletHitbox : TabletModel
{
	override void BasicInit() {
		// just need to make it not call the parent's...

		// otherwise it'll crash.....
	}

	States
	{
	Spawn:
		TNT1 A 1;
		wait;
	}
}

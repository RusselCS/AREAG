class MiningHatPickup : BasicInventory
{
    Default
    {
        BasicInventory.PickupType PICKTYPE_ARTIFICE;
        BasicInventory.PickupID PICKMSG_MININGHAT;
        BasicInventory.CheckItem "HasMiningHat";
    }
	States
	{
	SpawnFrames:
		HATS A 1;
		loop;
	}
}

class MiningHatEquip : HatEquip
{
    override void definePickup()
    {
        clsName = "MiningHatPassive";
        hatCheckItem = "HasMiningHat";
    }
}

class HasMiningHat : Once {}

class MiningHatPassive : HatPassive {

    Actor lightFX;

    override void hatInit(AREAGPlayerPawn plr) {
        let lpos = getLightPos(plr);
        bool bl;
        [bl, lightFX] = plr.A_SpawnItemEx("MiningHatFX", lpos.x, lpos.y, lpos.z);
        console.printf("Mining Hat Initiated.");
    }
    override void hatEquip(AREAGPlayerPawn plr) {
        // 
        console.printf("Mining Hat Equipped.");
    }
    override void hatTick(AREAGPlayerPawn plr) {
        let lpos = getLightPos(plr);
        lightFX.Warp(lightFX,
                    lpos.x,
                    lpos.y,
                    lpos.z,
                    0, WARPF_INTERPOLATE|WARPF_NOCHECKPOSITION|WARPF_MOVEPTR|WARPF_ABSOLUTEPOSITION);
        console.printf("Mining Hat Tick.");
    }
    override void hatRemove(AREAGPlayerPawn plr) {
        lightFX.Destroy();
        console.printf("Mining Hat Removed.");
    }

    override void onDestroy() {
        lightFX.Destroy();
    }

    vector3 getLightPos(AREAGPlayerPawn plr) {
        return (plr.pos.x, plr.pos.y, plr.pos.z + plr.player.viewheight);
    }
}

class MiningHatFX : BasicEffect
{
    Default
    {
        renderstyle "None";
    }

    States
    {
    Spawn:
        PLAY A 1;
        wait;
    }
}

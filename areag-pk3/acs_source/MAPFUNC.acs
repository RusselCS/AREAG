// These are common definitions used for map controlling scripts.

#define MAPPROP_LEVELNUM 0
#define MAPPROP_MAPCODE 1
#define MAPPROP_TEXTNAME 2
#define MAPPROP_RUNENAME 3
#define MAPPROP_LANGNAME 4

// MAP DEFINITIONS FOR ACS SIDE
// 0 - Levelnum
// 1 - MAPCODE
// 2 - Map Name
// 3 - Map Name texture
// 4 - Map's language name

#define MAX_MAPS 2
#define MAX_IMAGES 10

str mapList[MAX_MAPS][5] = {
	{100, "TESTMAP", "Beyond Valley", "", "TESTMAP"},
	{101, "TESTMAP2", "Valley Coliseum", "", "TESTMAP2"}
};

str imageList[MAX_MAPS][MAX_IMAGES] = {
	{"TBTM_01", "TBTM_02"}
};

function int getMapByLevelNum(int levelNum)
{
	for(int i = 0; i < MAX_MAPS; i++)
	{
		if(mapList[i][MAPPROP_LEVELNUM] == levelNum)
		{
			return i;
		}
	}
	return -1;
}

function void checkDroneTransform(int tid, int drone)
{
	if(CheckActorInventory(tid, "DroneFlag")>0)
	{
		if(drone)
		{
			transformToDrone(tid);
		}
		else
		{
			transformFromDrone(tid);
		}
	}
}

function void transformToDrone(int tid)
{
	SetActorInventory(tid, "PlayerTempHealth", GetActorHealth(tid));
	MorphActor(tid, "AREAGDrone", "", 0x7ffffff, MRF_NEWTIDBEHAVIOUR|MRF_UNDOALWAYS|MRF_WHENINVULNERABLE|MRF_UNDOBYDEATH|MRF_UNDOBYDEATHSAVES, "", "");
	SetActorHealth(tid, CheckActorInventory(tid, "DroneBattery"));
}

function void transformFromDrone(int tid)
{
	SetActorInventory(tid, "DroneBattery", 0);
	UnmorphActor(tid, true);
	SetActorHealth(tid, CheckActorInventory(tid, "PlayerTempHealth"));
}

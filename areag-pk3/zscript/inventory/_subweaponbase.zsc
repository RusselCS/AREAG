extend class AREAGProtoWeapon
{
    // Sub functions
    action State A_SubWeaponReady(StateLabel windUp, StateLabel offWindUp, StateLabel subLower) {

        int iButtons = invoker.plr.iButtons;
        int iOldButtons = invoker.plr.iOldButtons;

        // for(int i = 0; i < TreasureItems.itemFields.Size(); i++) {
        //     if(countInv(TreasureItems.activeItem(i))) {
        //         return ResolveState("Fire");
        //     }
        // }

        if(invoker.iLastSubWeapon != invoker.plr.iSelectedWep) {
            return ResolveState(subLower);
        }

        if(invoker.bMainInProgress) {
            return ResolveState(offWindUp);
        }

        if(iButtons & BT_ALTATTACK) {
            return ResolveState(windUp);
        }

        return ResolveState(null);
    }

    action State A_SubHoldCheck(StateLabel st) {
        if(invoker.plr.iButtons & BT_ALTATTACK) {
            return ResolveState(st);
        }
        return ResolveState(null);
    }

    action State A_SubRefire(StateLabel rst, StateLabel wst) {
        if(invoker.plr.iButtons & BT_ALTATTACK) {
            return ResolveState(rst);
        }

        if(invoker.plr.iButtons & BT_ATTACK) {
            return ResolveState(wst);
        }
        
        return ResolveState(null);
    }

    action State A_CheckMainStatus(StateLabel rst, StateLabel wst) {
        if(invoker.bMainInProgress) {
            return ResolveState(wst);
        }

        if(invoker.plr.iButtons & BT_ALTATTACK) {
            return ResolveState(rst);
        }

        return ResolveState(null);
    }

    action void A_StartSubFiringSequence() {
        invoker.bSubInProgress = true;
    }

    action void A_FinishSubFiringSequence() {
        invoker.bSubInProgress = false;
    }

    action State A_SubRaise() {
        invoker.iLastSubWeapon = invoker.plr.iSelectedWep;
        invoker.bSubInProgress = false;
        if(invoker.plr.getCurrentSubweapon()) {
            return ResolveState(invoker.plr.getCurrentSubweapon().getRaiseState());
        }
        return ResolveState("EmptyRaise");
    }

    States
    {
        SubRaise:
            HBM2 DCBA 1;
            goto SubReady;
        SubReady:
            HBM2 A 1 A_SubWeaponReady("SubWindup", "SubOffWindup", "SubLower");
            wait;
        SubWindup:
            HBM2 A 0 A_StartSubFiringSequence();
            HBM2 ABCD 1;
            goto SubHold;
        SubHold:
            TNT1 A 1;
            TNT1 A 0 A_SubHoldCheck("SubHold");
            goto SubFire;
        SubFire:
            HBMA ABCDE 1;
            TNT1 A 6;
            TNT1 A 0 A_FinishSubFiringSequence();
            TNT1 AAAAAAAAAAAAAAAAAAAA 1 A_SubRefire("SubHoldRefire", "SubWait");
            goto SubRaise;
        SubOffWindup:
            HBM2 ABCD 1;
            goto SubWait;
        SubWait:
            TNT1 A 1;
            TNT1 AAAAAAAAAAAAAAAAAAAA 1 A_CheckMainStatus("SubHoldRefire", "SubWait");
            goto SubRaise;
        SubHoldRefire:
            HBM2 A 0 A_StartSubFiringSequence();
            goto SubHold;
        SubLower:
            HBM2 ABCD 1;
            goto AltRaise;
        
        SubWepRaise:
            HBM2 DCBA 1;
            goto SubWepReady;
        SubWepReady:
            HBM2 A 1 A_SubWeaponReady("SubWepWindup", "SubWepOffWindup", "SubWepLower");
            wait;
        SubWepWindup:
            HBM2 A 0 A_StartSubFiringSequence();
            HBM2 AABCD 1;
            goto SubWepHold;
        SubWepHold:
            TNT1 A 1;
            TNT1 A 0 A_SubHoldCheck("SubWepHold");
            goto SubWepFire;
        SubWepFire:
            HBMA ABCDE 1;
            TNT1 A 6;
            TNT1 A 0 A_FinishSubFiringSequence();
            TNT1 AAAAAAAAAAAAAAAAAAAAA 1 A_SubRefire("SubWepHoldRefire", "SubWepWait");
            goto SubWepRaise;
        SubWepOffWindup:
            HBMA ABCD 1;
            goto SubWepWait;
        SubWepWait:
            TNT1 A 1;
            TNT1 AAAAAAAAAAAAAAAAAAAA 1 A_CheckMainStatus("SubWepHoldRefire", "SubWepWait");
            goto SubWepRaise;
        SubWepHoldRefire:
            HBMA A 0 A_StartSubFiringSequence();
            goto SubWepHold;
        SubWepLower:
            HBMA ABCD 1;
            goto AltRaise;
    }
}
